name: build

on: [ push, pull_request ]

jobs:
  default:
    name: Default
    strategy:
      matrix:
        platform: [ ubuntu-latest, macos-latest, windows-latest ]
        toolchain: [ stable, nightly ]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Build
        run: cargo build --release --all-features
  no_std:
    name: no_std
    strategy:
      matrix:
        platform: [ ubuntu-latest, macos-latest ]
        toolchain: [ stable, nightly ]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Build
        working-directory: no_std/nix
        run: cargo build --release --all-features
  no_std_win:
    name: no_std-win
    strategy:
      matrix:
        toolchain: [ stable, nightly ]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Build
        working-directory: no_std/win
        run: cargo build --release --all-features
  no_main_win:
    name: no_main-win
    strategy:
      matrix:
        toolchain: [ stable, nightly ]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Build
        working-directory: no_main/win
        run: cargo build --release --all-features
  build_std:
    name: build-std
    strategy:
      matrix:
        project_dir: [ build_std, no_main/nix ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
      - name: Build
        working-directory: ${{ matrix.project_dir }}
        run: >
          rustup component add rust-src;
          RUSTFLAGS="-Zlocation-detail=none -Zfmt-debug=none" cargo +nightly build -Z build-std=std,panic_abort -Z build-std-features="optimize_for_size" --target x86_64-unknown-linux-gnu --release;
          cargo +nightly build -Z build-std=std,panic_abort -Z build-std-features=panic_immediate_abort --target x86_64-unknown-linux-gnu --release;
